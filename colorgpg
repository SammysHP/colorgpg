#!/bin/bash

##########################################################################
#                                                                        #
#  colorgpg - colorized output for 'gpg'                                 #
#  Copyright (C) 2013 Sven Karsten Greiner (sven@sammyshp.de)            #
#                                                                        #
#  This program is free software: you can redistribute it and/or modify  #
#  it under the terms of the GNU General Public License as published by  #
#  the Free Software Foundation, either version 3 of the License, or     #
#  (at your option) any later version.                                   #
#                                                                        #
#  This program is distributed in the hope that it will be useful,       #
#  but WITHOUT ANY WARRANTY; without even the implied warranty of        #
#  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the         #
#  GNU General Public License for more details.                          #
#                                                                        #
#  You should have received a copy of the GNU General Public License     #
#  along with this program. If not, see <http://www.gnu.org/licenses/>.  #
#                                                                        #
##########################################################################

color_white="\033[1;37m"
color_yellow="\033[1;33m"
color_green="\033[1;32m"
color_blue="\033[1;34m"
color_cyan="\033[1;36m"
color_red="\033[1;31m"
color_magenta="\033[1;35m"
color_black="\033[1;30m"
color_darkwhite="\033[0;37m"
color_darkyellow="\033[0;33m"
color_darkgreen="\033[0;32m"
color_darkblue="\033[0;34m"
color_darkcyan="\033[0;36m"
color_darkred="\033[0;31m"
color_darkmagenta="\033[0;35m"
color_darkblack="\033[0;30m"
color_off="\033[0;0m"

colorize_keylist () {
    echo "$input" | while IFS= read -r line; do
        if [[ $line =~ ^(pub.+|sec.+)((\[.+)([0-9]{4}-[0-9]{2}-[0-9]{2})(\])) ]]; then
            echo -en "$color_white"
            echo -n "${BASH_REMATCH[1]}"
            if [[ $(date -d "${BASH_REMATCH[4]}" '+%s') < $(date '+%s') ]]; then
                echo -en "$color_red"
            else
                echo -en "$color_darkwhite"
            fi
            echo "${BASH_REMATCH[2]}"
        elif [[ $line =~ ^pub ]]; then
            echo -en "$color_white"
            echo "$line"
        elif [[ $line =~ ^sec ]]; then
            echo -en "$color_white"
            echo "$line"
        elif [[ $line =~ ^uid ]]; then
            echo -en "$color_yellow"
            echo "$line"
        elif [[ $line =~ ^rev ]]; then
            echo -en "$color_darkred"
            echo "$line"
        elif [[ $line =~ ^(sub.+)((\[.+)([0-9]{4}-[0-9]{2}-[0-9]{2})(\])) ]]; then
            echo -en "$color_darkgreen"
            echo -n "${BASH_REMATCH[1]}"
            if [[ $(date -d "${BASH_REMATCH[4]}" '+%s') < $(date '+%s') ]]; then
                echo -en "$color_red"
            else
                echo -en "$color_darkwhite"
            fi
            echo "${BASH_REMATCH[2]}"
        elif [[ $line =~ ^sub ]]; then
            echo -en "$color_darkgreen"
            echo "$line"
        elif [[ $line =~ ^sig ]]; then
            echo -en "$color_darkwhite"
            echo "$line"
        else
            echo -en "$color_off"
            echo "$line"
        fi
    done

    echo
}

case "$1" in
    "-k" | "--list-key" | "--list-keys" | "--list-sig" | "--list-sigs" | "-K" | "--list-secret-key" | "--list-secret-keys" )
        input=$(gpg "$@")
        statuscode=$?
        colorize_keylist
        exit $statuscode
        ;;
    "---" )
        input=$(cat)
        colorize_keylist
        exit 0
        ;;
    * )
        gpg "$@"
        exit $?
esac
